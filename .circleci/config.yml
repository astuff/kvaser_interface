version: 2.1

commands:
  ros_build:
    parameters:
      docker_image:
        type: string
        default: "autonomoustuff/docker-builds:melodic-ros-base"
    steps:
      - checkout
      - run:
          name: Install Linuxcan on Host
          command: |
            sudo apt-add-repository -y ppa:astuff/kvaser-linux
            sudo apt-get clean && sudo apt-get update -qq && sudo apt-get install dpkg # Fix dpkg bug
            sudo apt-get install -y linux-headers-`uname -r` kvaser-drivers-dkms
            sudo depmod
            cd /usr/src/kvaser-drivers-*
            sudo sed -i 's/#define NR_VIRTUAL_DEV       1/#define NR_VIRTUAL_DEV       3/g' virtualcan/virtualcan.h
            sudo make virtualcan
            sudo install -m 644 virtualcan/kvvirtualcan.ko /lib/modules/`uname -r`/updates/dkms/
            sudo virtualcan.sh start
      - run:
          name: Clone and Run AS Docker Image
          command: |
            docker pull << parameters.docker_image >>
            docker run -d --name test --device=/dev/kvvirtualcan0 --device=/dev/kvvirtualcan1 --device=/dev/kvvirtualcan2 --device=/dev/kvvirtualcan3 --device=/dev/kvvirtualcan4 --device=/dev/kvvirtualcan5 -v `pwd`:/ros_ws/src -w /ros_ws << parameters.docker_image >> sh -c "sleep infinity"
      - run:
          name: Install Linuxcan in Docker
          command: |
            docker exec test /bin/bash -c "apt-add-repository -y ppa:astuff/kvaser-linux && apt update -qq"
            docker exec test /bin/bash -c "apt install -y kvaser-canlib-dev"
      - run:
          name: Set Up ROS in Docker
          command: |
            docker exec test /bin/bash -c "source \`find /opt/ros -name setup.bash | sort | head -1\` && rosdep install --from-paths src --ignore-src -y"
            docker exec test /bin/bash -c "source \`find /opt/ros -name setup.bash | sort | head -1\` && catkin init && catkin config --extend /opt/ros/\$ROS_DISTRO"
      - run:
          name: Build in Docker
          command: |
            docker exec test /bin/bash -c "source \`find /opt/ros -name setup.bash | sort | head -1\` && catkin build"
      - run:
          name: Run Tests in Docker
          command: |
            docker exec test /bin/bash -c "source \`find /opt/ros -name setup.bash | sort | head -1\` && catkin run_tests -j1 && catkin_test_results"
      - run:
          name: Shut Down Container
          command: |
            docker kill $(docker ps -l -q)


jobs:
  melodic:
    machine:
      image: ubuntu-2004:202111-02
    steps:
      - ros_build:
          docker_image: autonomoustuff/docker-builds:melodic-ros-base
    working_directory: ~/src

  noetic:
    machine:
      image: ubuntu-2004:202111-02
    steps:
      - ros_build:
          docker_image: autonomoustuff/docker-builds:noetic-ros-base
    working_directory: ~/src

workflows:
  testing:
    jobs:
      - melodic
      - noetic

